<Window x:Class="ScientificCalculator_ver.MVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ScientificCalculator_ver.MVVM"
        mc:Ignorable="d"
        Title="MainWindow" Height="550" Width="380">
    <Window.Resources>
        <Style x:Key="InvisibleButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="1"/>
        </Style>

        <Style x:Key="NomalButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                            CornerRadius="5" 
                                BorderBrush="White"
                            BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"/>
        </Style>

        <Style x:Key="SpecialButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Background" Value=" #005a9e"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                    CornerRadius="5" 
                        BorderBrush=" #005a9e"
                    BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HighlightToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Border x:Name="bottomLine" Height="3" Width="15"  VerticalAlignment="Bottom" Background="Transparent"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">

                                <Setter TargetName="bottomLine" Property="Background" Value="#FF005A9E"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="lightToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5" BorderBrush="White" BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF005A9E"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF005A9E"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




    </Window.Resources>

    <Grid Margin="5" Background="#f3f3f3">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <TextBox IsReadOnly="True" Foreground="Gray" Background="#f3f3f3" BorderBrush="Transparent" Grid.Column="0" Margin="5,0,5,0" Height="40" VerticalAlignment="Center" TextAlignment="Right" FontWeight="Bold"  Grid.ColumnSpan="5" Text="{Binding CurrentExpression}" FontSize="{Binding CurrentExpressionFontSize}"/>
        <TextBox IsReadOnly="True"  BorderBrush="Transparent" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" Margin="5" Height="80" VerticalContentAlignment ="Center" TextAlignment="Right" FontWeight="Bold"  Background="#f3f3f3" Text="{Binding InputNumber}" FontSize="{Binding InputNumberFontSize}"/>

        <Button Grid.Row="2" Grid.Column="0" Style="{StaticResource InvisibleButtonStyle}" Command="{Binding AngleChangeCommand}" Content="{Binding AngleChange}"/>
        <ToggleButton Grid.Row="2" Grid.Column="1" Style="{StaticResource HighlightToggleButtonStyle}">F-E</ToggleButton>

        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Button Grid.Row="1" Grid.Column="0" Style="{StaticResource InvisibleButtonStyle}" IsEnabled="False">MC</Button>
            <Button Grid.Row="1" Grid.Column="1" Style="{StaticResource InvisibleButtonStyle}" IsEnabled="False">MR</Button>
            <Button Grid.Row="1" Grid.Column="2" Style="{StaticResource InvisibleButtonStyle}">M+</Button>
            <Button Grid.Row="1" Grid.Column="3" Style="{StaticResource InvisibleButtonStyle}">M-</Button>
            <Button Grid.Row="1" Grid.Column="4" Style="{StaticResource InvisibleButtonStyle}">MS</Button>
            <Button Grid.Row="1" Grid.Column="5" Style="{StaticResource InvisibleButtonStyle}" IsEnabled="False">M∨</Button>
        </Grid>

        <Button x:Name="openPopupButton" Command="{Binding ToggleTrigonometryPopupCommand}"  Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource InvisibleButtonStyle}">⊿ 삼각법 ∨</Button >

        <Popup IsOpen="{Binding IsTrigonometryPopupOpen}" PlacementTarget="{Binding ElementName=openPopupButton}"  Placement="Bottom"  StaysOpen="False">
            <Border Background="#e5e5e5" Width="250" Height="100">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <ToggleButton IsChecked="{Binding Is2nd}" x:Name="Trigonometry2nd" Grid.Row="0" Grid.Column="0" Content="2nd" Style="{StaticResource lightToggleButtonStyle}"/>
                    <Button x:Name="sin" Grid.Row="0" Grid.Column="1" Content="{Binding ButtonSin}" Style="{StaticResource NomalButtonStyle}"/>
                    <Button x:Name="cos" Grid.Row="0" Grid.Column="2" Content="{Binding ButtonCos}" Style="{StaticResource NomalButtonStyle}"/>
                    <Button x:Name="tan" Grid.Row="0" Grid.Column="3" Content="{Binding ButtonTan}" Style="{StaticResource NomalButtonStyle}"/>

                    <ToggleButton IsChecked="{Binding IsHyp}" x:Name="TrigonometryHyp" Grid.Row="1" Grid.Column="0" Content="hyp" Style="{StaticResource lightToggleButtonStyle}"/>
                    <Button x:Name="sec" Grid.Row="1" Grid.Column="1" Content="{Binding ButtonSec}" Style="{StaticResource NomalButtonStyle}"/>
                    <Button x:Name="csc" Grid.Row="1" Grid.Column="2" Content="{Binding ButtonCsc}" Style="{StaticResource NomalButtonStyle}"/>
                    <Button x:Name="cot" Grid.Row="1" Grid.Column="3" Content="{Binding ButtonCot}" Style="{StaticResource NomalButtonStyle}"/>

                </Grid>
            </Border>
        </Popup>

        <Button x:Name="openFunPopupButton" Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="2" Style="{StaticResource InvisibleButtonStyle}" Command="{Binding ToggleFunctionPopupCommand}">∫ 함수 ∨</Button>

        <Popup IsOpen="{Binding IsFunctionPopupOpen}" PlacementTarget="{Binding ElementName=openFunPopupButton}" Placement="Bottom"  StaysOpen="False">
            <Border Background="#e5e5e5" Width="200" Height="80">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="abs" Grid.Row="0" Grid.Column="0" Content="abs" Style="{StaticResource NomalButtonStyle}"/>
                    <Button x:Name="floor" Grid.Row="0" Grid.Column="1" Content="floor" Style="{StaticResource NomalButtonStyle}"/>
                    <Button x:Name="ceil" Grid.Row="0" Grid.Column="2" Content="ceil" Style="{StaticResource NomalButtonStyle}"/>

                    <Button x:Name="rand" Grid.Row="1" Grid.Column="0" Content="rand" Style="{StaticResource NomalButtonStyle}"/>
                    <Button x:Name="dms" Grid.Row="1" Grid.Column="1" Content="->dms" Style="{StaticResource NomalButtonStyle}"/>
                    <Button x:Name="degrees" Grid.Row="1" Grid.Column="2" Content="->deg" Style="{StaticResource NomalButtonStyle}"/>

                </Grid>
            </Border>
        </Popup>

        <ToggleButton Grid.Row="5" Grid.Column="0" Style="{StaticResource lightToggleButtonStyle}" IsChecked="{Binding IsToggled}" >2nd</ToggleButton>
        <Button Grid.Row="5" Grid.Column="1" Style="{StaticResource NomalButtonStyle}" Command="{Binding SurdCommand}" CommandParameter="Pi">π</Button>
        <Button Grid.Row="5" Grid.Column="2" Style="{StaticResource NomalButtonStyle}" Command="{Binding SurdCommand}" CommandParameter="e">e</Button>
        <Button Grid.Row="5" Grid.Column="3" Style="{StaticResource NomalButtonStyle}" Height="39" Margin="2,2,2,0" VerticalAlignment="Top" Content="{Binding ButtonCE}" Command="{Binding CECommand}" />
        <Button Grid.Row="5" Grid.Column="4" Style="{StaticResource NomalButtonStyle}" Command="{Binding DelCommand}">⌫</Button>

        <Button Grid.Row="6" Grid.Column="0" Style="{StaticResource NomalButtonStyle}" Content="{Binding ButtonSqr}" Command="{Binding SpecialNumberCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"/>
        <Button Grid.Row="6" Grid.Column="1" Style="{StaticResource NomalButtonStyle}" Command="{Binding SpecialNumberCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}" >1/x</Button>
        <Button Grid.Row="6" Grid.Column="2" Style="{StaticResource NomalButtonStyle}" Command="{Binding SpecialNumberCommand}" CommandParameter="abs">|x|</Button>
        <Button Grid.Row="6" Grid.Column="3" Style="{StaticResource NomalButtonStyle}" Command="{Binding SpecialNumberCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}" >exp</Button>
        <Button Grid.Row="6" Grid.Column="4" Style="{StaticResource NomalButtonStyle}" Command="{Binding SpecialNumberCommand}" CommandParameter="mod">mod</Button>

        <Button Grid.Row="7" Grid.Column="0" Style="{StaticResource NomalButtonStyle}" Content="{Binding ButtonRoot}" Command="{Binding SpecialNumberCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"/> 
        <Button Grid.Row="7" Grid.Column="1" Style="{StaticResource NomalButtonStyle}" Command="{Binding BasketCommand}" CommandParameter="(">(</Button>
        <Button Grid.Row="7" Grid.Column="2" Style="{StaticResource NomalButtonStyle}" Command="{Binding BasketCommand}" CommandParameter=")">)</Button>
        <Button Grid.Row="7" Grid.Column="3" Style="{StaticResource NomalButtonStyle}" Command="{Binding SpecialNumberCommand}" CommandParameter="Fact">n!</Button>
        <Button Grid.Row="7" Grid.Column="4" Style="{StaticResource NomalButtonStyle}" Command="{Binding CalculationCommand}" CommandParameter="÷">÷</Button>

        <Button Grid.Row="8" Grid.Column="0" Style="{StaticResource NomalButtonStyle}" Content="{Binding ButtonSquare}" Command="{Binding SpecialNumberCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"/>
        <Button Grid.Row="8" Grid.Column="1" Style="{StaticResource NomalButtonStyle}" Command="{Binding NumberCommand}" CommandParameter="7">7</Button>
        <Button Grid.Row="8" Grid.Column="2" Style="{StaticResource NomalButtonStyle}" Command="{Binding NumberCommand}" CommandParameter="8">8</Button>
        <Button Grid.Row="8" Grid.Column="3" Style="{StaticResource NomalButtonStyle}" Command="{Binding NumberCommand}" CommandParameter="9">9</Button>
        <Button Grid.Row="8" Grid.Column="4" Style="{StaticResource NomalButtonStyle}" Command="{Binding CalculationCommand}" CommandParameter="×">×</Button>

        <Button Grid.Row="9" Grid.Column="0" Style="{StaticResource NomalButtonStyle}" Content="{Binding ButtonSquare10}" Command="{Binding SpecialNumberCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"/>
        <Button Grid.Row="9" Grid.Column="1" Style="{StaticResource NomalButtonStyle}" Command="{Binding NumberCommand}" CommandParameter="4">4</Button>
        <Button Grid.Row="9" Grid.Column="2" Style="{StaticResource NomalButtonStyle}" Command="{Binding NumberCommand}" CommandParameter="5">5</Button>
        <Button Grid.Row="9" Grid.Column="3" Style="{StaticResource NomalButtonStyle}" Command="{Binding NumberCommand}" CommandParameter="6">6</Button>
        <Button Grid.Row="9" Grid.Column="4" Style="{StaticResource NomalButtonStyle}" Command="{Binding CalculationCommand}" CommandParameter="-">-</Button>

        <Button Grid.Row="10" Grid.Column="0" Style="{StaticResource NomalButtonStyle}" Content="{Binding ButtonLog}" Command="{Binding SpecialNumberCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"/>
        <Button Grid.Row="10" Grid.Column="1" Style="{StaticResource NomalButtonStyle}" Command="{Binding NumberCommand}" CommandParameter="1">1</Button>
        <Button Grid.Row="10" Grid.Column="2" Style="{StaticResource NomalButtonStyle}" Command="{Binding NumberCommand}" CommandParameter="2">2 </Button>
        <Button Grid.Row="10" Grid.Column="3" Style="{StaticResource NomalButtonStyle}" Command="{Binding NumberCommand}" CommandParameter="3">3</Button>
        <Button Grid.Row="10" Grid.Column="4" Style="{StaticResource NomalButtonStyle}" Command="{Binding CalculationCommand}" CommandParameter="+">+</Button>

        <Button Grid.Row="11" Grid.Column="0" Style="{StaticResource NomalButtonStyle}" Content="{Binding ButtonNSquare}" Command="{Binding SpecialNumberCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"/>
        <Button Grid.Row="11" Grid.Column="1" Style="{StaticResource NomalButtonStyle}" Command="{Binding ChangePMCommand}" CommandParameter="">+/-</Button>
        <Button Grid.Row="11" Grid.Column="2" Style="{StaticResource NomalButtonStyle}" Command="{Binding NumberCommand}" CommandParameter="0">0</Button>
        <Button Grid.Row="11" Grid.Column="3" Style="{StaticResource NomalButtonStyle}" Command="{Binding DotNumberCommand}" CommandParameter=".">.</Button>
        <Button Grid.Row="11" Grid.Column="4" Style="{StaticResource SpecialButtonStyle}">=</Button>
    </Grid>
</Window>
